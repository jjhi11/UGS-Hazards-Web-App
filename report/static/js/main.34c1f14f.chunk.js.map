{"version":3,"sources":["reportParts/HazardMap.js","config.js","esriModules.js","reportParts/Group.js","reportParts/Hazard.js","helpers.js","reportParts/HazardUnit.js","reportParts/References.js","services/QueryService.js","reportParts/CoverPage.js","reportParts/SummaryPage.js","reportParts/OtherDataPage.js","App.js","index.js","images/ugs-logo.jpg"],"names":["map","view","baseUrl","notProd","process","urls","hazardGroupingsTable","hazardGroupTextTable","hazardIntroTextTable","hazardReferenceTextTable","hazardUnitTextTable","otherDataTable","reportTextTable","queries","webMaps","hazard","a","requires","loadModules","css","WebMap","MapView","Polygon","Graphic","watchUtils","symbolUtils","HazardMapContext","createContext","visualAssets","props","console","log","useState","setVisualAssets","mapLoading","setMapLoading","mapLoaded","setMapLoaded","createMap","getModules","mapDiv","document","createElement","style","body","appendChild","polylineSymbol","type","color","width","polygon","aoi","polylineGraphic","geometry","symbol","portalItem","id","config","container","ui","components","extent","expand","graphics","add","useEffect","getScreenshots","newScreenshots","index","queriesWithResults","length","url","hazardCode","getScreenshot","screenshot","renderer","mapImage","dataUrl","Provider","value","children","when","layers","layer","getItemAt","visible","RegExp","test","layerId","load","whenFalseOnce","takeScreenshot","height","className","title","name","dangerouslySetInnerHTML","__html","text","useContext","code","introText","src","alt","minHeight","getHazardCodeFromUnitCode","unitCode","slice","toUpperCase","hasLegend","setHasLegend","legend","useRef","mapContext","buildLegend","renderers","uniqueValueInfos","filter","info","HazardUnit","clone","renderPreviewHTML","node","current","assets","ref","Description","HowToUse","references","reference","key","queryUnitsAsync","meta","hazardField","parameters","geometryType","JSON","stringify","returnGeometry","outFields","f","fetch","response","json","responseJson","units","features","feature","attributes","getDistinctHazardCodesFromUnits","unit","queryTable","where","queryHazardUnitTableAsync","join","queryReferenceTableAsync","queryIntroTextAsync","queryGroupingAsync","queryGroupTextAsync","groups","queryReportTextTableAsync","queryOtherDataTableAsync","aoiDescription","Introduction","Disclaimer","ugsLogo","Top","Table1headingautogeneratedtable","Table2headingautogeneratedtable","Bottom","Data","References_","groupToHazardMap","setGroupToHazardMap","hazardToUnitMap","setHazardToUnitMap","hazardIntroText","setHazardIntroText","hazardReferences","setHazardReferences","setQueriesWithResults","groupToTextMap","setGroupToTextMap","reportTextMap","setReportTextMap","otherDataMap","setOtherDataMap","getData","Promise","all","featureClassMap","allHazardInfos","hazardInfos","flatUnitCodes","Array","from","Set","reduce","previous","concat","groupings","hazardUnitText","reportTextRows","otherDataRows","otherDataMapBuilder","forEach","row","reportTextMapBuilder","Section","Text","flatGroups","HazardGroup","groupText","groupToTextMapBuilder","hazardToUnitMapBuilder","HazardName","push","groupToHazardMapBuilder","HazardCode","onClick","window","print","description","SummaryPage","HazardMap","Object","keys","groupName","Group","intro","x","Hazard","References","OtherDataPage","OtherResources","init","ReactDOM","render","getElementById","localStorage","getItem","parse","then","module","exports"],"mappings":"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","file":"static/js/main.34c1f14f.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\r\nimport config from '../config';\r\nimport getModules from '../esriModules';\r\n\r\n\r\nexport const HazardMapContext = createContext({\r\n  visualAssets: {}\r\n});\r\n\r\n// we tried moving these to useRef but the code silently failed at map.current.when()\r\nlet map;\r\nlet view;\r\nexport default props => {\r\n  console.log('HazardMap.render', props);\r\n  const [ visualAssets, setVisualAssets ] = useState({});\r\n  const [ mapLoading, setMapLoading ] = useState(false);\r\n  const [ mapLoaded, setMapLoaded ] = useState(false);\r\n  const createMap = async () => {\r\n    console.log('HazardMap.createMap');\r\n\r\n    setMapLoading(true);\r\n\r\n    const { WebMap, MapView, Polygon, Graphic } = await getModules();\r\n\r\n    const mapDiv = document.createElement('div');\r\n    mapDiv.style = 'position: absolute; left: -5000px; width: 1000px; height: 500px';\r\n    document.body.appendChild(mapDiv);\r\n\r\n    const polylineSymbol = {\r\n      type: 'simple-line',\r\n      color: [226, 119, 40],\r\n      width: 4\r\n    };\r\n\r\n    const polygon = new Polygon(props.aoi);\r\n\r\n    const polylineGraphic = new Graphic({\r\n      geometry: polygon,\r\n      symbol: polylineSymbol\r\n    });\r\n\r\n    map = new WebMap({\r\n      portalItem: { id: config.webMaps.hazard }\r\n    });\r\n    console.log('map created');\r\n\r\n    view = new MapView({\r\n      map,\r\n      container: mapDiv,\r\n      ui: {\r\n        components: ['attribution']\r\n      },\r\n      extent: polygon.extent.expand(3)\r\n    });\r\n\r\n    view.graphics.add(polylineGraphic);\r\n\r\n    setMapLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getScreenshots = async () => {\r\n      const newScreenshots = {};\r\n      for (let index = 0; index < props.queriesWithResults.length; index++) {\r\n        const [url, hazardCode] = props.queriesWithResults[index];\r\n        const { screenshot, renderer } = await getScreenshot(url);\r\n\r\n        newScreenshots[hazardCode] = {mapImage: screenshot.dataUrl, renderer};\r\n      }\r\n\r\n      setVisualAssets(newScreenshots);\r\n    };\r\n\r\n    if (mapLoaded && props.queriesWithResults.length > 0) {\r\n      getScreenshots();\r\n    }\r\n  }, [props.queriesWithResults, mapLoaded]);\r\n\r\n  if (!mapLoading) {\r\n    createMap();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HazardMapContext.Provider value={{ visualAssets }}>\r\n        {props.children}\r\n      </HazardMapContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getScreenshot = async function(url) {\r\n  console.log('HazardMap.getScreenshot');\r\n\r\n  let renderer;\r\n\r\n  await map.when();\r\n\r\n  for (let index = 0; index < map.layers.length; index++) {\r\n    const layer = map.layers.getItemAt(index);\r\n    layer.visible = new RegExp(`${url}$`).test(`${layer.url}/${layer.layerId}`);\r\n\r\n    if (layer.visible) {\r\n      await layer.load();\r\n\r\n      renderer = layer.renderer;\r\n    };\r\n  }\r\n\r\n  await view.when();\r\n  const { watchUtils } = await getModules();\r\n\r\n  await watchUtils.whenFalseOnce(view, 'updating');\r\n\r\n  const screenshot = await view.takeScreenshot({width: 2000, height: 1000});\r\n\r\n  return {screenshot, renderer};\r\n};\r\n","const baseUrl = 'https://services.arcgis.com/ZzrwjTRez6FJiOq4/arcgis/rest/services';\r\nexport default {\r\n  notProd: process.env.REACT_APP_ENVIRONMENT !== 'production',\r\n  urls: {\r\n    baseUrl,\r\n    hazardGroupingsTable: `${baseUrl}/Report_Tables_View/FeatureServer/0`,\r\n    hazardGroupTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/1`,\r\n    hazardIntroTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/2`,\r\n    hazardReferenceTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/3`,\r\n    hazardUnitTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/4`,\r\n    otherDataTable: `${baseUrl}/Report_Tables_View/FeatureServer/7`,\r\n    reportTextTable: `${baseUrl}/Report_Tables_View/FeatureServer/8`\r\n  },\r\n  queries: [\r\n    // ['Utah_Geologic_Hazards/FeatureServer/-1', 'FCH'], // Flood Canyon Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/0', 'FLH'], // Flood Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/1', 'SGS'], // Shallow Groundwater Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/2', 'LSS'], // Landslide Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/3', 'LSF'], // landslides\r\n    ['Utah_Geologic_Hazards/FeatureServer/5', 'CAS'], // Caliche Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/6', 'CSS'], // Collapsible Soil Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/7', 'CRS'], // Corrosive Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/8', 'EFH'], // Earth Fissure Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/9', 'ERZ'], // Erosion Hazard Zones\r\n    ['Utah_Geologic_Hazards/FeatureServer/10', 'EXS'], // Expansive Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/11', 'GSP'], // Ground Subsidence Potential\r\n    ['Utah_Geologic_Hazards/FeatureServer/12', 'MKF'], // Karst Features\r\n    ['Utah_Geologic_Hazards/FeatureServer/13', 'PES'], // Piping and Erosion Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/14', 'GRS'], // Radon Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/15', 'RFH'], // Rockfall Hazard\r\n    ['Utah_Geologic_Hazards/FeatureServer/16', 'SDH'], // Salt Tectonics Related Ground Deformation\r\n    ['Utah_Geologic_Hazards/FeatureServer/17', 'SBP'], // Shallow Bedrock Potential\r\n    ['Utah_Geologic_Hazards/FeatureServer/18', 'SLS'], // Soluble Soil and Rock Susceptibility\r\n    ['Utah_Geologic_Hazards/FeatureServer/19', 'WSS'], // Wind-Blown Sand Susceptibility\r\n    // ['Utah_Earthquake_Hazards/FeatureServer/0', '??'], // utah epicenters\r\n    // ['Utah_Earthquake_Hazards/FeatureServer/1', '??'], // mining-induced epicenters\r\n    // ['Utah_Earthquake_Hazards/FeatureServer/2', '??'], // quaternary faults\r\n    ['Utah_Earthquake_Hazards/FeatureServer/3', 'LQS'], // Liquefaction Susceptibility\r\n    ['Utah_Earthquake_Hazards/FeatureServer/4', 'SFR'], // Surface Fault Rupture Hazard Special Study Zone\r\n  ],\r\n  webMaps: {\r\n    hazard: '895afaac7ee04933b91ee9dd1f88c823'\r\n  }\r\n};\r\n","import { loadModules } from 'esri-loader';\r\n\r\n\r\nexport default async () => {\r\n  const requires = [\r\n    'esri/WebMap',\r\n    'esri/views/MapView',\r\n    'esri/geometry/Polygon',\r\n    'esri/Graphic',\r\n    'esri/core/watchUtils',\r\n    'esri/symbols/support/symbolUtils'\r\n  ];\r\n\r\n  const [\r\n    WebMap,\r\n    MapView,\r\n    Polygon,\r\n    Graphic,\r\n    watchUtils,\r\n    symbolUtils\r\n  ] = await loadModules(requires, { css: true });\r\n\r\n  return {\r\n    WebMap, MapView, Polygon, Graphic, watchUtils, symbolUtils\r\n  };\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"page-break\">\r\n      <h1 title={config.notProd && 'HazardGroupingsTable.HazardGroup'}>{props.name}</h1>\r\n      <p dangerouslySetInnerHTML={{ __html: props.text}} title={config.notProd && 'HazardGroupTextTable.Text'}></p>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { HazardMapContext } from './HazardMap';\r\nimport config from '../config';\r\n\r\n\r\nexport default props => {\r\n  console.log('Hazard.render', props);\r\n\r\n  const mapContext = useContext(HazardMapContext);\r\n  const visualAssets = mapContext.visualAssets[props.code];\r\n\r\n  return (\r\n    <div className=\"page-break\">\r\n      <h2 title={config.notProd && 'HazardUnitTextTable.HazardName (from first unit)'}>{props.name}</h2>\r\n      <p dangerouslySetInnerHTML={{ __html: props.introText }} title={config.notProd && 'HazardIntroTextTable.Text'}></p>\r\n      { visualAssets && <img src={visualAssets.mapImage}\r\n        alt=\"map\" style={{width: '100%', minHeight: '200px'}} /> }\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","export const getHazardCodeFromUnitCode = (unitCode) => {\r\n  return unitCode.slice(-3).toUpperCase();\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport getModules from '../esriModules';\r\nimport config from '../config';\r\nimport { HazardMapContext } from './HazardMap';\r\nimport { getHazardCodeFromUnitCode } from '../helpers';\r\nimport './HazardUnit.scss';\r\n\r\n\r\nexport default props => {\r\n  console.log('HazardUnit', props);\r\n  const [hasLegend, setHasLegend] = useState(false);\r\n  const legend = useRef(null);\r\n  const mapContext = useContext(HazardMapContext);\r\n\r\n  useEffect(() => {\r\n    const buildLegend = async renderer => {\r\n      console.log('buildLegend', renderer);\r\n      const { symbolUtils } = await getModules();\r\n      let renderers = [];\r\n\r\n      if (renderer.type === 'unique-value') {\r\n        renderers = renderer.uniqueValueInfos.filter(info => info.value === props.HazardUnit);\r\n      }\r\n\r\n      if (renderers.length !== 1) {\r\n        return;\r\n      }\r\n\r\n      const symbol = renderers[0].symbol.clone();\r\n\r\n      await symbolUtils.renderPreviewHTML(symbol, {\r\n        node: legend.current\r\n      });\r\n\r\n      setHasLegend(true);\r\n    };\r\n\r\n    console.log('mapContext', mapContext);\r\n    const assets = mapContext.visualAssets[getHazardCodeFromUnitCode(props.HazardUnit)];\r\n    if (!hasLegend && assets) {\r\n      buildLegend(assets.renderer);\r\n    }\r\n  }, [hasLegend, props.HazardUnit, mapContext]);\r\n\r\n  return (\r\n    <div className=\"unit\">\r\n      <div className=\"legend-container\">\r\n        <div ref={legend} className=\"legend\"></div>\r\n        <div>\r\n          <p dangerouslySetInnerHTML={{ __html: props.Description }}\r\n            title={config.notProd && 'HazardUnitTextTable.Description'}></p>\r\n          <h4>How to Use This Map</h4>\r\n          <p dangerouslySetInnerHTML={{ __html: props.HowToUse }}\r\n            title={config.notProd && 'HazardUnitTextTable.HowToUse'}></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\n\r\nexport default props => {\r\n  console.log('References.render');\r\n  return (\r\n    <>\r\n      <h3>References</h3>\r\n      {(props.references && props.references.length > 0) ? props.references.map((reference, index) =>\r\n        <p key={index} dangerouslySetInnerHTML={{ __html: reference }}\r\n          title={config.notProd && 'HazardReferenceTextTable.Text'}></p>)\r\n          : <p>None</p>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import config from '../config';\r\nimport { stringify } from 'query-string';\r\nimport { getHazardCodeFromUnitCode } from '../helpers';\r\n\r\n\r\nexport const queryUnitsAsync = async (meta, aoi) => {\r\n  console.log('QueryService.queryUnitsAsync');\r\n\r\n  const [url, hazard] = meta;\r\n\r\n  const hazardField = `${hazard}HazardUnit`;\r\n\r\n  const parameters = {\r\n    geometryType: 'esriGeometryPolygon',\r\n    geometry: JSON.stringify(aoi),\r\n    returnGeometry: false,\r\n    outFields: hazardField,\r\n    f: 'json'\r\n  };\r\n\r\n  const response = await fetch(`${config.urls.baseUrl}/${url}/query?${stringify(parameters)}`);\r\n  const responseJson = await response.json();\r\n\r\n  return {\r\n    units: responseJson.features.map(feature => feature.attributes[hazardField]),\r\n    hazard,\r\n    url\r\n  };\r\n};\r\n\r\nconst getDistinctHazardCodesFromUnits = units => {\r\n  return units.map(unit => getHazardCodeFromUnitCode(unit));\r\n}\r\n\r\nconst queryTable = async (url, where, outFields) => {\r\n  const parameters = {\r\n    where,\r\n    outFields,\r\n    f: 'json'\r\n  };\r\n\r\n  const response = await fetch(`${url}/query?${stringify(parameters)}`);\r\n  const responseJson = await response.json();\r\n\r\n  return responseJson.features.map(feature => feature.attributes);\r\n};\r\n\r\nexport const queryHazardUnitTableAsync = units => {\r\n  console.log('QueryService.queryHazardUnitTableAsync');\r\n\r\n  const where = `HazardUnit IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'HazardName,HazardUnit,HowToUse,Description';\r\n\r\n  return queryTable(config.urls.hazardUnitTextTable, where, outFields);\r\n};\r\n\r\nexport const queryReferenceTableAsync = units => {\r\n  console.log('QueryService.queryReferenceTableAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `Hazard IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'Hazard,Text';\r\n\r\n  return queryTable(config.urls.hazardReferenceTextTable, where, outFields);\r\n};\r\n\r\nexport const queryIntroTextAsync = units => {\r\n  console.log('QueryService.queryIntroTextAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `Hazard IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'Hazard,Text';\r\n\r\n  return queryTable(config.urls.hazardIntroTextTable, where, outFields);\r\n};\r\n\r\nexport const queryGroupingAsync = units => {\r\n  console.log('QueryService.queryGroupingAsync');\r\n\r\n  units = getDistinctHazardCodesFromUnits(units);\r\n  const where = `HazardCode IN ('${units.join('\\',\\'')}')`;\r\n  const outFields = 'HazardCode,HazardGroup';\r\n\r\n  return queryTable(config.urls.hazardGroupingsTable, where, outFields);\r\n};\r\n\r\nexport const queryGroupTextAsync = groups => {\r\n  console.log('QueryService.queryGroupTextAsync');\r\n\r\n  const where = `HazardGroup IN ('${groups.join('\\',\\'')}')`;\r\n  const outFields = 'HazardGroup,Text';\r\n\r\n  return queryTable(config.urls.hazardGroupTextTable, where, outFields);\r\n};\r\n\r\nexport const queryReportTextTableAsync = () => {\r\n  console.log('QueryService.queryReportTextTableAsync');\r\n\r\n  const where = '1=1';\r\n  const outFields = 'Section,Text';\r\n\r\n  return queryTable(config.urls.reportTextTable, where, outFields);\r\n};\r\n\r\nexport const queryOtherDataTableAsync = () => {\r\n  console.log('QueryService.queryOtherDataTable');\r\n\r\n  const where = '1=1';\r\n  const outFields = 'Data,Introduction,HowToUse,References_';\r\n\r\n  return queryTable(config.urls.otherDataTable, where, outFields);\r\n};\r\n","import React from 'react';\r\nimport ugsLogo from '../images/ugs-logo.jpg';\r\nimport config from '../config';\r\nimport './CoverPage.scss';\r\n\r\n\r\nexport default ({ aoiDescription, aoi, Introduction, Disclaimer }) => {\r\n  return (\r\n    <div className=\"cover-page\">\r\n      <div className=\"header\">\r\n        <h1>Utah Geological Survey</h1>\r\n        <img src={ugsLogo} alt=\"dnr logo\" className=\"logo\" />\r\n        <h3>GEOLOGIC HAZARDS MAPPING AND DATA CUSTOM REPORT</h3>\r\n        <h3 title={config.notProd && 'from \"description\" property of input data'}>for {aoiDescription}</h3>\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{ __html: Introduction }}\r\n        title={config.notProd && 'ReportTextTable.Text(Introduction)'}></p>\r\n      {'<map>'}\r\n      <p dangerouslySetInnerHTML={{ __html: Disclaimer }}\r\n        title={config.notProd && 'ReportTextTable.Text(Disclaimer)'}></p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\n\r\n\r\nexport default props => {\r\n  console.log('SummaryPage.render', props);\r\n\r\n  return (\r\n    <div className=\"page-break\">\r\n      <div className=\"header\">\r\n        <h1>Report Summary</h1>\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{ __html: props.Top }} title={config.notProd && \"ReportTextTable.Text(Top)\"}></p>\r\n      <p dangerouslySetInnerHTML={{ __html: props.Table1headingautogeneratedtable }}\r\n        title={config.notProd && \"ReportTextTable.Text(Table 1 heading...)\"}></p>\r\n      {'<table>'}\r\n      <p dangerouslySetInnerHTML={{ __html: props.Table2headingautogeneratedtable }}\r\n        title={config.notProd && \"ReportTextTable.Text(Table 2 heading...)\"}></p>\r\n      {'<table>'}\r\n      <p dangerouslySetInnerHTML={{ __html: props.Bottom }} title={config.notProd && \"ReportTextTable.Text(Bottom)\"}></p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport config from '../config';\r\n\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"page-break\">\r\n      <div className=\"header\">\r\n        <h1>OTHER DATA</h1>\r\n        <h2>{props.Data}</h2>\r\n      </div>\r\n      <p dangerouslySetInnerHTML={{ __html: props.Introduction }}\r\n        title={config.notProd && \"OtherDataTable.Introduction\"}></p>\r\n      <div>{\"<map>\"}</div>\r\n      {props.children}\r\n      <h4>How To Use This Map</h4>\r\n      <p dangerouslySetInnerHTML={{ __html: props.HowToUse }}\r\n        title={config.notProd && \"OtherDataTable.HowToUse\"}></p>\r\n      { props.References_ &&\r\n        <>\r\n          <h4>References</h4>\r\n          <p dangerouslySetInnerHTML={{ __html: props.References_ }}\r\n            title={config.notProd && \"OtherDataTable.References_\"}></p>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport config from './config';\r\nimport HazardMap from './reportParts/HazardMap';\r\nimport Group from './reportParts/Group';\r\nimport Hazard from './reportParts/Hazard';\r\nimport HazardUnit from './reportParts/HazardUnit';\r\nimport References from './reportParts/References';\r\nimport {\r\n  queryUnitsAsync,\r\n  queryHazardUnitTableAsync,\r\n  queryReferenceTableAsync,\r\n  queryIntroTextAsync,\r\n  queryGroupingAsync,\r\n  queryGroupTextAsync,\r\n  queryReportTextTableAsync,\r\n  queryOtherDataTableAsync\r\n} from './services/QueryService';\r\nimport { getHazardCodeFromUnitCode } from './helpers';\r\nimport CoverPage from './reportParts/CoverPage';\r\nimport SummaryPage from './reportParts/SummaryPage';\r\nimport OtherDataPage from './reportParts/OtherDataPage';\r\n\r\n\r\nexport default props => {\r\n  const [groupToHazardMap, setGroupToHazardMap] = useState({});\r\n  const [hazardToUnitMap, setHazardToUnitMap] = useState({});\r\n  const [hazardIntroText, setHazardIntroText] = useState();\r\n  const [hazardReferences, setHazardReferences] = useState();\r\n  const [queriesWithResults, setQueriesWithResults] = useState([]);\r\n  const [groupToTextMap, setGroupToTextMap] = useState([]);\r\n  const [reportTextMap, setReportTextMap] = useState({});\r\n  const [otherDataMap, setOtherDataMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      console.log('App.getData');\r\n      const allHazardInfos = await Promise.all(config.queries.map(featureClassMap => {\r\n        return queryUnitsAsync(featureClassMap, props.polygon);\r\n      }));\r\n\r\n      console.log('queried all units');\r\n\r\n      const hazardInfos = allHazardInfos.filter(({ units }) => units.length > 0);\r\n      const flatUnitCodes = Array.from(new Set(hazardInfos.reduce((previous, { units }) => previous.concat(units), [])));\r\n      setQueriesWithResults(hazardInfos.map(info => [info.url, info.hazard]));\r\n\r\n      // these queries can be done simultaneously\r\n      const [\r\n        groupings,\r\n        hazardIntroText,\r\n        hazardUnitText,\r\n        hazardReferences,\r\n        reportTextRows,\r\n        otherDataRows\r\n      ] = await Promise.all([\r\n        queryGroupingAsync(flatUnitCodes),\r\n        queryIntroTextAsync(flatUnitCodes),\r\n        queryHazardUnitTableAsync(flatUnitCodes),\r\n        queryReferenceTableAsync(flatUnitCodes),\r\n        queryReportTextTableAsync(),\r\n        queryOtherDataTableAsync()\r\n      ]);\r\n\r\n      const otherDataMapBuilder = {};\r\n      otherDataRows.forEach(row => {\r\n        otherDataMapBuilder[row.Data] = row;\r\n      });\r\n      setOtherDataMap(otherDataMapBuilder);\r\n\r\n      const reportTextMapBuilder = {};\r\n      reportTextRows.forEach(({ Section, Text }) => {\r\n        reportTextMapBuilder[Section] = Text;\r\n      });\r\n      setReportTextMap(reportTextMapBuilder);\r\n\r\n      const flatGroups = Array.from(new Set(groupings.map(({ HazardGroup }) => HazardGroup)));\r\n      const groupText = await queryGroupTextAsync(flatGroups);\r\n\r\n      const groupToTextMapBuilder = {};\r\n      groupText.forEach(({ HazardGroup, Text }) => groupToTextMapBuilder[HazardGroup] = Text);\r\n\r\n      const hazardToUnitMapBuilder = {};\r\n      hazardUnitText.forEach(({ HazardUnit, HazardName, HowToUse, Description }) => {\r\n        const hazardCode = getHazardCodeFromUnitCode(HazardUnit);\r\n\r\n        if (!hazardToUnitMapBuilder[hazardCode]) {\r\n          hazardToUnitMapBuilder[hazardCode] = [];\r\n        }\r\n\r\n        hazardToUnitMapBuilder[hazardCode].push({ HazardName, HowToUse, Description, HazardUnit });\r\n      });\r\n\r\n      const groupToHazardMapBuilder = {}\r\n      groupings.forEach(({ HazardCode, HazardGroup }) => {\r\n        if (!groupToHazardMapBuilder[HazardGroup]) {\r\n          groupToHazardMapBuilder[HazardGroup] = [];\r\n        }\r\n\r\n        groupToHazardMapBuilder[HazardGroup].push(HazardCode);\r\n      });\r\n\r\n      setHazardToUnitMap(hazardToUnitMapBuilder);\r\n      setGroupToHazardMap(groupToHazardMapBuilder);\r\n      setHazardIntroText(hazardIntroText);\r\n      setHazardReferences(hazardReferences);\r\n      setGroupToTextMap(groupToTextMapBuilder);\r\n    };\r\n\r\n    if (props.polygon) {\r\n      getData();\r\n    }\r\n  }, [props.polygon]);\r\n\r\n  return (<>\r\n    <button className=\"hide-for-print print-button\" onClick={window.print}>Print Report</button>\r\n    <CoverPage aoiDescription={props.description} {...reportTextMap} />\r\n    <SummaryPage {...reportTextMap} />\r\n    <HazardMap aoi={props.polygon} queriesWithResults={queriesWithResults}>\r\n     {Object.keys(groupToHazardMap).map(groupName => (\r\n        <Group key={groupName} name={groupName} text={groupToTextMap[groupName]}>\r\n          {hazardIntroText && hazardReferences && hazardToUnitMap && groupToHazardMap[groupName].map(hazardCode => {\r\n            const intro = hazardIntroText.filter(x => x.Hazard === hazardCode)[0];\r\n            const introText = (intro) ? intro.Text : null;\r\n            const references = hazardReferences.filter(x => x.Hazard === hazardCode);\r\n            const units = hazardToUnitMap[hazardCode];\r\n                return (\r\n                  <Hazard name={units[0].HazardName} introText={introText}\r\n                    key={hazardCode} code={hazardCode}>\r\n                    { units.map((unit, index) => <HazardUnit key={index} {...unit}/>) }\r\n                    <References references={references.map(({ Text }) => Text)}></References>\r\n                  </Hazard>\r\n                )\r\n              })}\r\n        </Group>\r\n      ))}\r\n    </HazardMap>\r\n    <OtherDataPage {...otherDataMap['Lidar Elevation Data']}>\r\n      {\"<lidar-specific stuff>\"}\r\n    </OtherDataPage>\r\n    <OtherDataPage {...otherDataMap['Aerial Photography and Imagery']}>\r\n      {\"<imagery-specific stuff>\"}\r\n    </OtherDataPage>\r\n    <div className=\"header page-break\">\r\n      <h1>OTHER GEOLOGIC HAZARD RESOURCES</h1>\r\n      <p dangerouslySetInnerHTML={{__html: reportTextMap.OtherResources}}\r\n        title={config.notProd && 'ReportTextTable.Text(OtherResources)'}></p>\r\n    </div>\r\n  </>);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\n\r\nconsole.log(`app version: ${process.env.REACT_APP_VERSION || 'dev'}`);\r\nconsole.log(`environment: ${process.env.REACT_APP_ENVIRONMENT}`);\r\n\r\nconst init = (aoi) => {\r\n  console.log('aoi', aoi);\r\n\r\n  ReactDOM.render(<App {...aoi} />, document.getElementById('root'));\r\n};\r\n\r\nlet aoi = localStorage.getItem('aoi');\r\nif (!aoi) {\r\n  import('./testData.json').then(aoi => init(aoi));\r\n} else {\r\n  init(JSON.parse(aoi));\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/ugs-logo.46881887.jpg\";"],"sourceRoot":""}